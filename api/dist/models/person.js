"use strict";var __awaiter=this&&this.__awaiter||function(e,_,i,d){return new(i=i||Promise)(function(a,t){function r(e){try{o(d.next(e))}catch(e){t(e)}}function n(e){try{o(d.throw(e))}catch(e){t(e)}}function o(e){var t;e.done?a(e.value):((t=e.value)instanceof i?t:new i(function(e){e(t)})).then(r,n)}o((d=d.apply(e,_||[])).next())})},__generator=this&&this.__generator||function(a,r){var n,o,_,i={label:0,sent:function(){if(1&_[0])throw _[1];return _[1]},trys:[],ops:[]},e={next:t(0),throw:t(1),return:t(2)};return"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function t(t){return function(e){return function(t){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,o&&(_=2&t[0]?o.return:t[0]?o.throw||((_=o.return)&&_.call(o),0):o.next)&&!(_=_.call(o,t[1])).done)return _;switch(o=0,(t=_?[2&t[0],_.value]:t)[0]){case 0:case 1:_=t;break;case 4:return i.label++,{value:t[1],done:!1};case 5:i.label++,o=t[1],t=[0];continue;case 7:t=i.ops.pop(),i.trys.pop();continue;default:if(!(_=0<(_=i.trys).length&&_[_.length-1])&&(6===t[0]||2===t[0])){i=0;continue}if(3===t[0]&&(!_||t[1]>_[0]&&t[1]<_[3])){i.label=t[1];break}if(6===t[0]&&i.label<_[1]){i.label=_[1],_=t;break}if(_&&i.label<_[2]){i.label=_[2],i.ops.push(t);break}_[2]&&i.ops.pop(),i.trys.pop();continue}t=r.call(a,i)}catch(e){t=[6,e],o=0}finally{n=_=0}if(5&t[0])throw t[1];return{value:t[0]?t[1]:void 0,done:!0}}([t,e])}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.PersonModel=void 0;var PersonModel=function(){function e(){}return e.prototype.SearchPerson=function(a,r){return __awaiter(this,void 0,void 0,function(){var t;return __generator(this,function(e){switch(e.label){case 0:return t="SELECT (select hospitalcode from opdconfig) as hospcode\n        ,person_id as pid,MD5(p.cid) as cid,p.pname,p.fname,p.lname,p.sex,p.nationality,p.citizenship,p.education,p.occupation,p.religion,p.marrystatus,p.house_regist_type_id\n        ,date_format(p.birthdate,'%Y-%m-%d') as birthdate,p.house_id,p.village_id,pt.hn\n         from person p \n        INNER JOIN patient pt on pt.hn = p.patient_hn\n        where TIMESTAMPDIFF(day,date(p.last_update),CURDATE()) < '".concat(r,"'"),[4,a.raw(t)];case 1:return[2,e.sent()[0]]}})})},e.prototype.SearchPersonEpi=function(a,r){return __awaiter(this,void 0,void 0,function(){var t;return __generator(this,function(e){switch(e.label){case 0:return t="select (select hospitalcode from opdconfig) as hospcode,person_epi_id,person_id,age_y,age_m,age_d,discharge,date_format(discharge_date,'%Y-%m-%d') as discharge_date,out_region,date_format(person_epi_regdate,'%Y-%m-%d') as person_epi_regdate\n        ,person_epi_no,nutrition_level,height_level,bmi_level,date_format(last_update,'%Y-%m-%d %h:%m:%s') as last_update\n                from person_epi pe where TIMESTAMPDIFF(day,date(pe.last_update),CURDATE()) < '".concat(r,"'"),[4,a.raw(t)];case 1:return[2,e.sent()[0]]}})})},e.prototype.SearchPersonWbc=function(a,r){return __awaiter(this,void 0,void 0,function(){var t;return __generator(this,function(e){switch(e.label){case 0:return t="select (select hospitalcode from opdconfig) as hospcode\n        ,w.person_wbc_id,person_id,birth_weight,date_format(baby_service1_date,'%Y-%m-%d') as baby_service1_date,date_format(baby_service2_date,'%Y-%m-%d') as baby_service2_date,breast_feed_status_id,period1_bw,period1_grade,period2_bw,period2_grade\n        ,period3_bw,period3_grade,period4_bw,period4_grade,period5_bw,period5_grade,date_format(vaccine_bcg_date,'%Y-%m-%d') as vaccine_bcg_date\n        ,date_format(vaccine_hbv1_date,'%Y-%m-%d') as vaccine_hbv1_date,date_format(vaccine_hbv2_date,'%Y-%m-%d') as vaccine_hbv2_date,date_format(vaccine_hbv3_date,'%Y-%m-%d') as vaccine_hbv3_date\n        ,date_format(vaccine_dtp1_date,'%Y-%m-%d') as vaccine_dtp1_date,date_format(vaccine_dtp2_date,'%Y-%m-%d') as vaccine_dtp2_date,date_format(vaccine_dtp3_date,'%Y-%m-%d') as vaccine_dtp3_date\n        ,date_format(vaccine_opv1_date,'%Y-%m-%d') as vaccine_opv1_date,date_format(vaccine_opv2_date,'%Y-%m-%d') as vaccine_opv2_date,date_format(vaccine_opv3_date,'%Y-%m-%d') as vaccine_opv3_date,date_format(vaccine_mmr_date,'%Y-%m-%d') as vaccine_mmr_date,baby_status_id\n        ,date_format(person_wbc_regdate,'%Y-%m-%d') as person_wbc_regdate,date_format(baby_service3_date,'%Y-%m-%d') as baby_service3_date,date_format(last_update,'%Y-%m-%d %h:%m:%s') as last_update,discharge\n        ,date_format(discharge_date,'%Y-%m-%d') as discharge_date,date_format(baby_service4_date,'%Y-%m-%d') as baby_service4_date,out_region,date_format(vaccine_dtphb1_date,'%Y-%m-%d') as vaccine_dtphb1_date,date_format(vaccine_dtphb2_date,'%Y-%m-%d') as vaccine_dtphb2_date,date_format(vaccine_dtphb3_date,'%Y-%m-%d') as vaccine_dtphb3_date\n        ,force_complete_export,date_format(force_complete_date,'%Y-%m-%d') as force_complete_date,send_nhso,date_format(nhso_send_date,'%Y-%m-%d') as nhso_send_date,nhso_send_time,nhso_send_staff,nhso_data_ok\n         from person_wbc w where TIMESTAMPDIFF(day,date(last_update),CURDATE()) < '".concat(r,"'"),[4,a.raw(t)];case 1:return[2,e.sent()[0]]}})})},e.prototype.CountOpdallergy=function(t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return[4,t.raw("select count(*) as count_\n        from opd_allergy where TIMESTAMPDIFF(day,date(update_datetime),CURDATE()) BETWEEN 0 and 7")];case 1:return[2,e.sent()[0]]}})})},e.prototype.PrsCidEncrypt=function(t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return[4,t.raw("REPLACE INTO prs_cidencrypt\n        SELECT * FROM\n        (select hn,cid,CONVERT(MD5(concat(cid,3200)) USING utf8) as cidencrypt\n        FROM patient pt WHERE MD5(concat(cid,3200)) is not null\n        AND cid NOT LIKE'0%'\n        GROUP BY cid)t")];case 1:return[2,e.sent()[0]]}})})},e.prototype.InsertOpdallergy=function(t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return[4,t.raw("REPLACE INTO opd_allergy(hn,report_date,agent,symptom,reporter,note\n            ,allergy_group_id,seriousness_id,allergy_result_id,allergy_relation_id,entry_datetime,update_datetime,force_no_order\n            ,opd_allergy_alert_type_id,patient_cid,opd_allergy_report_type_id,opd_allergy_source_id)\n            select t.hn,a.report_date,a.agent,concat(a.symptom,' ',a.note) as symptom ,a.reporter,a.note\n            ,if(a.allergy_group_id in('1','2','3','4','5','6','7','8','9'),a.allergy_group_id,null) as allergy_group_id\n            ,if(a.seriousness_id in('1','2','3','4','5','6','7','8','9'),a.seriousness_id,null) as seriousness_id\n            ,if(a.allergy_result_id in('1','2','3','4','5','6','7','8','9'),a.allergy_result_id,null) as allergy_result_id\n            ,if(a.allergy_relation_id in('1','2','3','4','5','6','7','8','9'),a.allergy_relation_id,null) as allergy_relation_id\n            ,a.entry_datetime,a.update_datetime,if(a.force_no_order = '',null,a.force_no_order) as force_no_order\n            ,if(a.opd_allergy_alert_type_id in('1','2','3','4','5','6','7','8','9'),a.opd_allergy_alert_type_id,null) as opd_allergy_alert_type_id ,t.cid\n            ,if(a.opd_allergy_report_type_id in('1','2','3','4','5','6','7','8','9'),a.opd_allergy_report_type_id,null) as opd_allergy_report_type_id\n            ,if(a.opd_allergy_source_id in('1','2','3','4','5','6','7','8','9'),a.opd_allergy_source_id,null) as opd_allergy_source_id\n            FROM opd_allergy_10918 a \n            INNER JOIN\n            (select cidencrypt,cid,hn FROM prs_cidencrypt where cidencrypt not in\n            (select cidencrypt FROM prs_cidencrypt where cidencrypt NOT in(select patient_cid FROM opd_allergy_10918)))t \n            on t.cidencrypt = a.patient_cid\n            where concat(t.hn,a.agent) not in(select concat(hn,agent) FROM opd_allergy)")];case 1:return[2,e.sent()[0]]}})})},e.prototype.TrunPrsCidEncrypt=function(t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return[4,t.raw("TRUNCATE prs_cidencrypt")];case 1:return[2,e.sent()[0]]}})})},e.prototype.removeOpdAllergy=function(a,r,n){return __awaiter(this,void 0,void 0,function(){var t;return __generator(this,function(e){switch(e.label){case 0:return t=n,t="delete from opd_allergy_10918\n        where TIMESTAMPDIFF(day,date(update_datetime),CURDATE()) between '".concat(r,"' and '").concat(t,"'"),[4,a.raw(t)];case 1:return[2,e.sent()[0]]}})})},e.prototype.createOpdAllergy=function(e,t){return e("opd_allergy_10918").insert(t)},e}();function md5(e){throw new Error("Function not implemented.")}exports.PersonModel=PersonModel;